// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Day1Utils$AdventOfCode2018Reasonml = require("./Day1Utils.bs.js");

var frequencyChanges = $$Array.to_list(Day1Utils$AdventOfCode2018Reasonml.parseInputFile("inputs/Day1Part2.txt"));

function findFrequencyReachedTwice(_currentFrequency, _reachedFrequencies, _restFrequencyChanges) {
  while(true) {
    var restFrequencyChanges = _restFrequencyChanges;
    var reachedFrequencies = _reachedFrequencies;
    var currentFrequency = _currentFrequency;
    if (restFrequencyChanges) {
      var newFrequency = currentFrequency + restFrequencyChanges[0] | 0;
      if (List.mem(newFrequency, reachedFrequencies)) {
        return newFrequency;
      } else {
        _restFrequencyChanges = restFrequencyChanges[1];
        _reachedFrequencies = /* :: */[
          newFrequency,
          reachedFrequencies
        ];
        _currentFrequency = newFrequency;
        continue ;
      }
    } else {
      _restFrequencyChanges = frequencyChanges;
      continue ;
    }
  };
}

var firstFrequencyReachedTwice = findFrequencyReachedTwice(0, /* :: */[
      0,
      /* [] */0
    ], frequencyChanges);

console.log(firstFrequencyReachedTwice);

exports.frequencyChanges = frequencyChanges;
exports.findFrequencyReachedTwice = findFrequencyReachedTwice;
exports.firstFrequencyReachedTwice = firstFrequencyReachedTwice;
/* frequencyChanges Not a pure module */
